name: Deploy to EC2

on:
  workflow_dispatch:
    inputs:
      stage:
        description: 'Deployment stage'
        required: true
        default: 'dev'
        options:
          - dev
          - qa
          - prod
 
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Validate input
        run: |
          if [[ "${{ github.event.inputs.stage }}" != "dev" && "${{ github.event.inputs.stage }}" != "qa" && "${{ github.event.inputs.stage }}" != "prod" ]]; then
            echo "Invalid input: ${{ github.event.inputs.stage }}. Please use one of the following: dev, qa, prod."
            exit 1
          fi
          
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-output: json

      - name: Initialize Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.2.3'

      - name: Apply Terraform configuration
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          terraform init
          VAR_FILE="${{ github.event.inputs.stage }}.tfvars"
          terraform apply -var-file="$VAR_FILE" --auto-approve \
          -var "github_token=${{ secrets.GITHUB_TOKEN }}" \
          -var "stage=${{ github.event.inputs.stage }}"
        working-directory: ./terraform   

      - name: Validate app health
        run: |
          EC2_PUBLIC_IP=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=MyInstance" --query 'Reservations[].Instances[].PublicIpAddress' --output text)
          sleep 120
          curl -f http://$EC2_PUBLIC_IP:80
